cmake_minimum_required(VERSION 3.0)
set(PROJECT_NAME "Vulkan-step-by-step")


option(AUTO_LOCATE_VULKAN "AUTO_LOCATE_VULKAN" ON)
if (AUTO_LOCATE_VULKAN)
    message(STATUS "Attempting auto locate Vulkan using CMake......")

    find_package(Vulkan)
    if (NOT ${Vulkan_INCLUDE_DIRS} STREQUAL "")
        set(VULKAN_PATH ${Vulkan_INCLUDE_DIRS})
        STRING(REGEX REPLACE "/Include" "" VULKAN_PATH
                ${VULKAN_PATH})
    endif ()
    if (NOT Vulkan_FOUND)

        message(STATUS "Failed to locate Vulkan SDK, retrying again...")
        if (EXISTS "${VULKAN_PATH}")
            message(STATUS "Successfully located the Vulkan SDK: ${VULKAN_PATH}")
        else ()
            message("Error: Unable to locate Vulkan SDK. Please turn off auto locate option by specifying 'AUTO_LOCATE_VULKAN' as 'OFF'")
            message("and specify manually path using 'VULKAN_SDK' and 'VULKAN_VERSION' variables in the CMakeLists.txt.")
            return()
        endif ()
    endif ()
else ()
    message(STATUS "Attempting to locate Vulkan SDK using manual path......")
    set(VULKAN_SDK "C:/VulkanSDK")
    set(VULKAN_VERSION "1.3.0")
    set(VULKAN_PATH "${VULKAN_SDK}/${VULKAN_VERSION}")
    message(STATUS "Using manual specified path: ${VULKAN_PATH}")
    if (NOT EXISTS "${VULKAN_PATH}")
        message("Error: Unable to locate this Vulkan SDK path VULKAN_PATH: ${VULKAN_PATH}, please specify correct path. For more information on correct installation process")
        return()
    endif ()
endif ()

project(${PROJECT_NAME})
add_definitions(-DVK_USE_PLATFORM_WIN32_KHR)
set(VULKAN_LINK_LIST "vulkan-1")
if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
    include_directories(AFTER ${VULKAN_PATH}/Include)
    link_directories(${VULKAN_PATH}/Bin)
endif()

if (WIN32)
    source_group ("include" REGULAR_EXPRESSION "include/*")
    source_group ("source" REGULAR_EXPRESSION "source/*")
endif (WIN32)

add_executable (${PROJECT_NAME} src/main.cpp)
target_link_libraries (${PROJECT_NAME}${VULKAN_LIB_LIST})
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 17)
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD_REQUIRED ON)